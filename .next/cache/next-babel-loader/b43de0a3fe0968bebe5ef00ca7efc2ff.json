{"ast":null,"code":"var _jsxFileName = \"/home/tylerklepsch/sites/tylerklepsch--wip/tylerklepsch-old/components/UI/Input/Input.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport classes from './Input.module.css';\nimport Aux from '../../hoc/Aux/aux';\n\nconst input = props => {\n  let inputElement = null;\n  let inputClasses = [classes.InputElement];\n  let requiredText = null; // Check if validation fails. Add a class. Add Invalid Text as span.\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n    requiredText = __jsx(\"span\", {\n      className: classes.InvalidText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }\n    }, \" \", props.elementConfig.label, \" is required.\");\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = __jsx(\"div\", {\n        className: `form__${props.elementType}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, __jsx(\"label\", {\n        htmlFor: props.elementConfig.label,\n        className: classes.Label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, props.elementConfig.label), __jsx(\"input\", _extends({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      })), requiredText);\n      break;\n\n    case 'textarea':\n      inputElement = __jsx(\"div\", {\n        className: `form__${props.elementType} ${classes.Input}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, __jsx(\"label\", {\n        htmlFor: props.elementConfig.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, props.elementConfig.label), __jsx(\"textarea\", _extends({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      })), requiredText);\n      break;\n\n    default:\n      inputElement = __jsx(\"div\", {\n        className: `form__${props.elementType} ${classes.Input}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, __jsx(\"input\", _extends({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      })));\n  }\n\n  return __jsx(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, inputElement);\n};\n\nexport default input;","map":{"version":3,"sources":["/home/tylerklepsch/sites/tylerklepsch--wip/tylerklepsch-old/components/UI/Input/Input.js"],"names":["React","classes","Aux","input","props","inputElement","inputClasses","InputElement","requiredText","invalid","shouldValidate","touched","push","Invalid","InvalidText","elementConfig","label","elementType","Label","join","value","changed","Input"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IAAa;AACzB,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,YAAY,GAAG,CAACL,OAAO,CAACM,YAAT,CAAnB;AACA,MAAIC,YAAY,GAAG,IAAnB,CAHyB,CAKzB;;AACA,MAAGJ,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACM,cAAvB,IAAyCN,KAAK,CAACO,OAAlD,EAA2D;AACzDL,IAAAA,YAAY,CAACM,IAAb,CAAkBX,OAAO,CAACY,OAA1B;AACAL,IAAAA,YAAY,GAAG;AAAM,MAAA,SAAS,EAAEP,OAAO,CAACa,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAwCV,KAAK,CAACW,aAAN,CAAoBC,KAA5D,kBAAf;AACD;;AAED,UAAQZ,KAAK,CAACa,WAAd;AACE,SAAM,OAAN;AACEZ,MAAAA,YAAY,GACV;AAAK,QAAA,SAAS,EAAG,SAAQD,KAAK,CAACa,WAAY,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAEb,KAAK,CAACW,aAAN,CAAoBC,KAD/B;AAEE,QAAA,SAAS,EAAEf,OAAO,CAACiB,KAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAE6Bd,KAAK,CAACW,aAAN,CAAoBC,KAFjD,CADF,EAIE;AACE,QAAA,SAAS,EAAEV,YAAY,CAACa,IAAb,CAAkB,GAAlB;AADb,SAEMf,KAAK,CAACW,aAFZ;AAGE,QAAA,KAAK,EAAEX,KAAK,CAACgB,KAHf;AAIE,QAAA,QAAQ,EAAEhB,KAAK,CAACiB,OAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,EASGb,YATH,CADF;AAaA;;AACF,SAAM,UAAN;AACEH,MAAAA,YAAY,GACV;AAAK,QAAA,SAAS,EAAG,SAAQD,KAAK,CAACa,WAAY,IAAGhB,OAAO,CAACqB,KAAM,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAElB,KAAK,CAACW,aAAN,CAAoBC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CZ,KAAK,CAACW,aAAN,CAAoBC,KAAhE,CADF,EAEE;AACE,QAAA,SAAS,EAAEV,YAAY,CAACa,IAAb,CAAkB,GAAlB;AADb,SAEMf,KAAK,CAACW,aAFZ;AAGE,QAAA,KAAK,EAAEX,KAAK,CAACgB,KAHf;AAIE,QAAA,QAAQ,EAAEhB,KAAK,CAACiB,OAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAOGb,YAPH,CADF;AAWA;;AACF;AACEH,MAAAA,YAAY,GACV;AAAK,QAAA,SAAS,EAAG,SAAQD,KAAK,CAACa,WAAY,IAAGhB,OAAO,CAACqB,KAAM,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACA,QAAA,SAAS,EAAEhB,YAAY,CAACa,IAAb,CAAkB,GAAlB;AADX,SAEIf,KAAK,CAACW,aAFV;AAGA,QAAA,KAAK,EAAEX,KAAK,CAACgB,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AA9BJ;;AAwCA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,YADH,CADF;AAKD,CAxDD;;AA0DA,eAAeF,KAAf","sourcesContent":["import React from 'react';\n\nimport classes from './Input.module.css'\nimport Aux from '../../hoc/Aux/aux';\n\nconst input = ( props ) => {\n  let inputElement = null;\n  let inputClasses = [classes.InputElement];\n  let requiredText = null;\n\n  // Check if validation fails. Add a class. Add Invalid Text as span.\n  if(props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n    requiredText = <span className={classes.InvalidText}> {props.elementConfig.label} is required.</span>;\n  }\n\n  switch (props.elementType) {\n    case ('input'):\n      inputElement = (\n        <div className={`form__${props.elementType}`}>\n          <label \n            htmlFor={props.elementConfig.label} \n            className={classes.Label}>{props.elementConfig.label}</label>\n          <input \n            className={inputClasses.join(' ')} \n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}/>\n          {requiredText} \n        </div>\n      );\n      break;\n    case ('textarea'):\n      inputElement = (\n        <div className={`form__${props.elementType} ${classes.Input}`}>\n          <label htmlFor={props.elementConfig.label}>{props.elementConfig.label}</label>\n          <textarea \n            className={inputClasses.join(' ')} \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}/>\n          {requiredText} \n        </div>\n      );\n      break;\n    default:\n      inputElement = (\n        <div className={`form__${props.elementType} ${classes.Input}`}>\n          <input \n          className={inputClasses.join(' ')} \n          {...props.elementConfig}\n          value={props.value}/>     \n        </div>\n      );\n  }\n\n  return (\n    <Aux>\n      {inputElement}      \n    </Aux>\n  )\n};\n\nexport default input;"]},"metadata":{},"sourceType":"module"}